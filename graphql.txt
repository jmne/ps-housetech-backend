findIDS: 

CURL:
curl 'https://cris-api-staging.uni-muenster.de/' -H 'Accept-Encoding: gzip, deflate, br' -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'Connection: keep-alive' -H 'DNT: 1' -H 'Origin: https://cris-api-staging.uni-muenster.de' --data-binary '{"query":"query findIDS {\n  nodes(ids: [47462165, 46644531, 46718889]) {\n    ... on Person {\n      node {\n        id\n        cfFirstNames\n        cfFamilyNames\n        status\n        academicTitle\n        postpositionedTitle\n      }\n      connections {\n        organisations {\n          edges {\n            node {\n              id\n              cfName\n              nameShort\n              status\n              cfUri\n            }\n          }\n        }\n        cards {\n          edges {\n            node {\n              roomNumber\n              email\n              phone\n              status\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"}' --compressed

Query:
query findIDS {
  nodes(ids: [47462165, 46644531, 46718889]) {
    ... on Person {
      node {
        id
        cfFirstNames
        cfFamilyNames
        status
        academicTitle
        postpositionedTitle
      }
      connections {
        organisations {
          edges {
            node {
              id
              cfName
              nameShort
              status
              cfUri
            }
          }
        }
        cards {
          edges {
            node {
              roomNumber
              email
              phone
              status
            }
          }
        }
      }
    }
  }
}
END findIDS

findNameWithVariable:

query findName($vorname: String!,$nachname: String!) {
  personList(
    select: {
      filter: [
        { match: { cfFirstNames: { query: $vorname } } },
        { match: { cfFamilyNames: { query: $nachname } } }
      ]
    }
  ) {
    list {
			node {
        id
        academicTitle
        postpositionedTitle
				cfFirstNames
        cfFamilyNames
      }
    }
  }
}

{
  "vorname": "Benedikt",
  "nachname": "Berger"
}

END findNameWithVariable


findOrganisationFromUserID:

query findOrganisationFromUserID {
  person(id: 79213436) {
    connections {
      organisations {
        edges {
          node {
            id
            cfName
          }
        }
      }
    }
  }
}

END findOrganisationFromUserID


findMitarbeiterWICursorInitial:

query findMitarbeiterWIInitial {
  organisation(id: 31914156) {
    connections {
      persons(first: 100) {
        pageInfo {
          startCursor
          endCursor
          hasPreviousPage
          hasNextPage
        }
        edges {
          node {
            id
            cfFirstNames
            cfFamilyNames
          }
        }
      }
    }
  }
}

END findMitarbeiterWICursorInitial

findMitarbeiterWICursor:

query findMitarbeiterWICursor {
  organisation(id: 31914156) {
    connections {
      persons(first: 100 after:"WzQ2OTg3MzQzXQ==") {
        pageInfo {
          startCursor
          endCursor
          hasNextPage
        }
        edges {
          node {
            id
            cfFirstNames
            cfFamilyNames
          }
        }
      }
    }
  }
}

END findMitarbeiterWICursor
